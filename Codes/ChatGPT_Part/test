def answer(text):
    model = "gpt-3.5-turbo"
    text = "\n대화 : " + text

    # 메시지 설정하기
    messages = [
            {'role' : 'system', 'content':'전체적인 대화의 맥락을 바탕으로 대화의 문제를 찾아주는 역할입니다.'},
            {'role' : 'system', 'content':'찾은 문제에 대한 이유를 바탕으로 이를 교정해줍니다. 이때 가장 우선시 되는 것은 갈등의 해결입니다.'},
            {'role' : 'system', 'content':'문맥상 어색한 부분이나, 세대별로 다른 이해를 발생할 수 있는 언어에 대한 내용을 찾아 교정합니다.'},
            {'role' : 'system', 'content':'교정의 이유는 대화 전체에서 맥락을 파악해 문제가 되는 이유로 상세히 나타냅니다.'},
            {'role' : 'system', 'content':'교정된 문장은 구어체 형식으로 대화에 맥락에 맞게 출력합니다.'},
            {'role' : 'system', 'content':'모든 교정이 필요한 문장에 대해 형식에 맞춰 출력합니다.'},
            {'role' : 'assistant', 'content':' 형식 :[문제 - 문장번호] : 문제의 이유 \n[원문 ] : 대화 본문 내용 \n[교정 - 문장번호] : 교정 내용 \n'},
            {'role' : 'assistant', 'content':' 내용이 길 경우 10단어 단위로 줄을 바꿔줍니다.'},
            {'role' : 'assistant', 'content':' 교정 이후 한줄을 공백으로 출력합니다.'},
            {"role": "user", "content": text}
    ]
    # ChatGPT API 호출하기
    response = openai.ChatCompletion.create(
        model=model,
        temperature=0.1,
        messages=messages
    )
    answer = response['choices'][0]['message']['content']
    print(answer)

// 결과

[문제 - 문장번호 6] : 문맥상 speaker 0의 발언이 이해하기 어려움
[원문] : 그런 부분에서만 개선을 하면 되지. 이거는 개선점이 있지만 우리 어머니 아버지처럼 가난을 물려줘야 되는 거면, 그거는 개선점이 없다 본다.
[교정 - 문장번호 6] : 그러니까, 이 문제는 개선할 수 있는 부분이 있지만, 가난을 물려주는 것과 같은 문제는 개선할 수 없다는 거야.
 
[문제 - 문장번호 10] : speaker 0의 발언이 이해하기 어려움
[원문] : 뭔데 이해 똑바로 했나?
[교정 - 문장번호 10] : 내 말을 이해했어? 
 
[문제 - 문장번호 14] : speaker 0의 발언이 이해하기 어려움
[원문] : 얘기를 해 봐봐. 내가 다시 설명해 줄 테니까.
[교정 - 문장번호 14] : 내가 다시 설명해 줄 테니까, 너가 이해할 수 있도록 말해봐. 
 
[문제 - 문장번호 16] : speaker 0의 발언이 이해하기 어려움
[원문] : 그 앞에 내가 뭐라 했는데 바로 정확하게 찍지는 못하네.
[교정 - 문장번호 16] : 내가 뭐라고 했는지 기억이 안 나네.

temperture을 낮춰 일정한 결과값을 받아보려고 했으나 큰 차이를 알 수 없었음

system을 통해 gpt의 역할을 부여하고 assistant를 통해 출력 형식을 지정해줌, 교정 대화 내용는 user 역할으로 메세지에 연결해 결과 값을 받아옴.
